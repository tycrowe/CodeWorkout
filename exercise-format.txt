Title: teenSum

Language: Java
Tags:     if, condition, plus, integer


Stem:
Given two `int`s, _a_ and _b_, return their sum. However, "teen" values in the 
range 13..19, inclusive, are extra lucky. So if either value is a teen, 
just return 19.


Code:
public class Answer
{
    \show[
    public int teenSum(int a, int b)
    {
        \[
        if (a >= 13 && a <= 19
            || b >= 13 && b <= 19)
        {
            return 19;
        }
        else
        {
            return a + b;
        }
        ]\
    }
    ]\
}

Explanation:
This description shows as the feedback/explanation after completing a
question.  Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed
diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat,
sed diam voluptua.


Tests:
tests {
  subject { new Answer() }

  example tests {
    teenSum( 3,  4) is  7
    teenSum(10, 13) is 19
    teenSum(13,  2) is 19
  }

  teenSum( 3, 19) is 19
  teenSum(10, 10) is 20
  teenSum( 6, 14) is 19
  teenSum(15,  2) is 19
  teenSum(12,  4) is 16
  teenSum( 2, 20) is 22
  teenSum( 2, 17) is 19
  teenSum( 2, 16) is 19
  
  hidden tests {
    teenSum(13, 13) is 19
    teenSum(19, 19) is 19
    teenSum( 6,  7) is 13
    teenSum(19, 20) is 19
    teenSum( 2, 18) is 19
  }
}

===========================================================================

Exercise:

Title:

Tags:

Owner:
Owners:

License:
Source:
Difficulty:
Explanation:

Stem:

Main text areas are in Markdown format (supports embedded HTML)

Prompt:

(choices as detected by Respondus? correct answer as detected by Respondus?)


Text formatting: Markdown and/or HTML?
  Recognize Markdown H1 as title?
  How to embed images? Use Markdown links and provide guidelines for how
  relative links work.
  Stem is implicit if omitted--all text up to prompt or choices or code
  How to include read-only code in stem/prompt?
    Use markdown format
      How to indicate language for syntax highlighting?

answer code/scaffold?

Code:
\source_code[

  \source_code_file[filename.java][ ]\
  \[ blank ]\
  \hide[   ]\
  \show[   ]\
  \fake[   ]\

]\


Tests:
xtest { assert 1 == 1 }
xtest "test case" { }
val num = 1 + 1
xtest ("test " + num) {}
xtest "ArrayList" {
  xtest "Starts Empty" {
    assert list.empty
  }
  for (i : 1..5) xtest ("Add " + i) {
    list.add(i)
    assert list.contains(i)
  }
}








test "name" {
  test "deeper" {
    subject { new Tip() }

    tip(20.99, 15) is 3.14
    tip(47.32, 20) is 9.46
    tip(50, 100)   is 50.0

    tip(50, 100) // matches reference
    
    test "description" tip(50, 100) is 50.0

    head is a method call (or chain) with a receiver (or, implicitly, the
    subject; the subject can be a class; the subject can be given a name,
    which defaults to "subject" if not specified)

    is
    is not
    is instanceof
    is (operator)
      ==
      !=
      <
      >
      <=
      >=
      between(max, min).inclusive
      between(max, min).exclusive
    throws
    matches
    
    given (lazy)
    before
    after
    subject
    assert
    
    options(exact_match, anything else?)
  }
}