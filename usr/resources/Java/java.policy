// Standard extensions get all permissions by default //


grant codeBase "file:${java.home}/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:${java.home}/lib/ext/*" {
    permission java.security.AllPermission;
};
grant codeBase "file:${{java.ext.dirs}}/*" {
    permission java.security.AllPermission;
};

grant codeBase "file:${ant.home}/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:/usr/share/java/-" {
    permission java.security.AllPermission;
};
// For OS X, in case java.home points to a JRE
grant codeBase "file:/Library/Java/JavaVirtualMachines/-" {
    permission java.security.AllPermission;
};
// For CentOS
grant codeBase "file:/usr/lib/jvm/-" {
    permission java.security.AllPermission;
};
grant codeBase "file:/usr/lib/java/-" {
    permission java.security.AllPermission;
};
grant codeBase "file:/usr/java/-" {
    permission java.security.AllPermission;
};


grant codeBase "file:${resource_dir}/-" {
    permission java.security.AllPermission;
};
grant codeBase "file:/Users/edwards/git/code-workout/usr/resources/Java/-" {
    permission java.security.AllPermission;
};

// default permissions granted to all domains

grant {
    // Local file access permissions
    permission java.io.FilePermission "${resource_dir}${/}-", "read";
    permission java.io.FilePermission "${work_dir}", "read,write";
    permission java.io.FilePermission
      "${work_dir}${/}-", "read,write,delete";
    permission java.util.logging.LoggingPermission "control";

    // Allows any thread to stop itself using the java.lang.Thread.stop()
    // method that takes no argument.
    // Note that this permission is granted by default only to remain
    // backwards compatible.
    // It is strongly recommended that you either remove this permission
    // from this policy file or further restrict it to code sources
    // that you specify, because Thread.stop() is potentially unsafe.
    // See "http://java.sun.com/notes" for more information.

    permission java.lang.RuntimePermission "stopThread";
    permission java.lang.RuntimePermission "getClassLoader";
    permission java.lang.RuntimePermission "exitVM";
    permission java.lang.RuntimePermission "shutdownHooks";

    permission java.net.SocketPermission "*:80", "connect";

    // "standard" properies that can be read by anyone

    permission java.util.PropertyPermission "java.version", "read";
    permission java.util.PropertyPermission "java.vendor", "read";
    permission java.util.PropertyPermission "java.vendor.url", "read";
    permission java.util.PropertyPermission "java.class.version", "read";
    permission java.util.PropertyPermission "os.name", "read";
    permission java.util.PropertyPermission "os.version", "read";
    permission java.util.PropertyPermission "os.arch", "read";
    permission java.util.PropertyPermission "file.separator", "read";
    permission java.util.PropertyPermission "path.separator", "read";
    permission java.util.PropertyPermission "line.separator", "read";

    permission java.util.PropertyPermission
        "java.specification.version", "read";
    permission java.util.PropertyPermission
        "java.specification.vendor", "read";
    permission java.util.PropertyPermission "java.specification.name", "read";

    permission java.util.PropertyPermission
        "java.vm.specification.version", "read";
    permission java.util.PropertyPermission
        "java.vm.specification.vendor", "read";
    permission java.util.PropertyPermission
        "java.vm.specification.name", "read";
    permission java.util.PropertyPermission "java.vm.version", "read";
    permission java.util.PropertyPermission "java.vm.vendor", "read";
    permission java.util.PropertyPermission "java.vm.name", "read";
    permission java.util.PropertyPermission "user.dir", "read";

    permission java.io.FilePermission
        "${java.io.tmpdir}${/}-", "read,write,delete";
    permission java.lang.RuntimePermission "setIO";

    // What requires this in the JUnit infrastructure?
    permission java.util.PropertyPermission "*", "read,write";

    permission java.lang.RuntimePermission "modifyThreadGroup", "";
};
